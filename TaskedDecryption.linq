<Query Kind="Program">
  <Connection>
    <ID>f6a9e815-2242-43a2-8307-8dbc4a986f94</ID>
    <Persist>true</Persist>
    <Driver>EntityFrameworkDbContext</Driver>
    <CustomAssemblyPath>C:\work\iWatch\CPCE Services\DataModel\bin\Debug\DataModel.dll</CustomAssemblyPath>
    <CustomTypeName>iWatch.iWatchEntities</CustomTypeName>
    <CustomCxString>IWSIT04_AJ</CustomCxString>
    <AppConfigPath>C:\LINQPad5\myConns.config</AppConfigPath>
    <DisplayName>IWSIT04_AJ</DisplayName>
  </Connection>
  <Output>DataGrids</Output>
  <Reference>&lt;ProgramFilesX64&gt;\IBM\IBM DATA SERVER DRIVER\bin\netf40_32\IBM.Data.DB2.dll</Reference>
  <Reference>C:\work\iWatch\Package Sources\WU.iWatch.Cryptography\bin\x64\Release\KeySecureRSAHeader.dll</Reference>
  <Reference>C:\work\iWatch\Package Sources\WU.iWatch.Cryptography\bin\x64\Release\SimpleInjector.dll</Reference>
  <Reference>C:\work\iWatch\Package Sources\WU.iWatch.Cryptography\bin\x64\Release\WU.iWatch.Core.dll</Reference>
  <Reference>C:\work\iWatch\Package Sources\WU.iWatch.Cryptography\bin\x64\Release\WU.iWatch.Cryptography.dll</Reference>
  <Reference>C:\work\iWatch\Package Sources\WU.iWatch.Cryptography\bin\x64\Release\WU.iWatch.DependencyInjection.dll</Reference>
  <Namespace>IBM.Data.DB2</Namespace>
  <Namespace>System.Threading.Tasks</Namespace>
  <Namespace>WU.iWatch.Cryptography</Namespace>
</Query>

public static UserQuery ctx;
public WU.iWatch.Cryptography.ICryptography _cryptoGraphy;

void Main()
{
	Database.Log = Console.Write;
	new DecryptTest(ctx, _cryptoGraphy).TestBulkDecryption();
}

public class DecryptTest
{
	private UserQuery ctx;
	private ICryptography _cryptoGraphy;

	public DecryptTest(UserQuery dbCtx, ICryptography cryptoGraphy)
	{
		ctx = dbCtx;
		_cryptoGraphy = cryptoGraphy;
	}

	internal void TestBulkDecryption()
	{
		int numRows = 200;
		var tDate = DateTime.Now.AddDays(-600).Date;
		// The below line is a simple Linq query through EF6
		var ts = ctx.Transactions.Where(t => t.SendDate > tDate).Take(numRows);
		ts.Dump();

		// Get the list of transactions (non tracking)
		var txns = GetData(numRows, tDate);
		txns.Dump();
		// SIdNumber, SId2Number, SId3Number, PIdNumber, PId2Number, PId3Number, SBankAccountNumber, PBankAccountNumber, SendCreditCardNum
		List<string> pToDec = new List<string> { "SIdNumber", "SId2Number", "SId3Number", "PIdNumber", "PId2Number", "PId3Number", "SBankAccountNumber", "PBankAccountNumber", "SendCreditCardNum" };
	}

	List<iWatch.Transaction> GetData(int rowsToFetch, DateTime dtFrom)
	{
		// The below Sql statement is loading Transaction into a list of entities.. But using the same EF connection and executing a non tracking object list
		// 
		#region SQL statement
		var sqlStmt = $@"SELECT 
	TXN_KEY as TxnKey,
	CREATED_TIMESTAMP as CreatedTimestamp,
	UPDATED_TIMESTAMP as UpdatedTimestamp,
	EXTERNAL_TXN_KEY as ExternalTxnKey,
	EXTERNAL_SYSTEM as ExternalSystem,
	SEND_RUN_DATE as SendRunDate,     
	PAY_RUN_DATE as PayRunDate,
	SEND_BATCH_ID as SendBatchId,
	PAY_BATCH_ID as PayBatchId,
	MTCN10 as Mtcn10,
	ADJUSTMENT_INDICATOR as AdjustmentIndicator,
	TXN_STATUS as TxnStatus,
	BRAND as Brand,
	LOCAL_CHARGES as LocalCharges,
	US_CHARGES as UsCharges,
	INTENDED_COUNTRY as IntendedCountry,
	INTENDED_CITY as IntendedCity,
	SEND_AGENT_COUNTRY as SendAgentCountry,
	SEND_CITY as SendCity,
	SEND_STATE_CODE as SendStateCode,
	SEND_PROVINCE as SendProvince,
	SEND_ZIP as SendZip,
	PAY_AGENT_COUNTRY as PayAgentCountry,
	PAY_CITY as PayCity,
	PAY_STATE_CODE as PayStateCode,
	PAY_PROVINCE as PayProvince,
	PAY_ZIP as PayZip,
	DEBTOR_ACCOUNT_TYPE as DebtorAccountType,
	DEBTOR_ACCOUNT_NUM as DebtorAccountNum,
	PRISONER_ACCOUNT_NUM as PrisonerAccountNum,
	QUICK_COLLECT_CC_NUM as QuickCollectCcNum,
	SWIFT_PAY_ACCOUNT_NUM as SwiftPayAccountNum,
	SEND_CREDIT_CARD_TYPE as SendCreditCardType,
	SEND_CREDIT_CARD_NUM as SendCreditCardNum,
	SEND_CREDIT_CARD_NUM_MASKED as SendCreditCardNumMasked,
	SEND_CREDIT_CARD_EXP as SendCreditCardExp,
	SEND_CREDIT_CARD_AUTH as SendCreditCardAuth,
	SEND_LOCAL_PRINCIPAL as SendLocalPrincipal,
	SEND_US_PRINCIPAL as SendUsPrincipal,
	PAY_LOCAL_PRINCIPAL as PayLocalPrincipal,
	PAY_US_PRINCIPAL as PayUsPrincipal,
	SEND_AGENT_ID as SendAgentId,
	SEND_AGENT_NETWORK_ID as SendAgentNetworkId,
	SEND_AGENT_SUB_NETWORK as SendAgentSubNetwork,
	PAY_AGENT_ID as PayAgentId,
	PAY_AGENT_NETWORK_ID as PayAgentNetworkId,
	PAY_AGENT_SUB_NETWORK as PayAgentSubNetwork,
	SEND_DATE as SendDate,
	SEND_TIME as SendTime,
	PAY_DATE as PayDate,
	PAY_TIME as PayTime,
	SEND_TERMINAL_ID as SendTerminalId,
	PAY_TERMINAL_ID as PayTerminalId,
	SEND_OPERATOR_ID as SendOperatorId,
	S_OPERATOR_NAME_1 as SOperatorName1,
	S_OPERATOR_NAME_2 as SOperatorName2,
	S_OPERATOR_NAME_3 as SOperatorName3,
	S_H2H_OPERATOR_ID as SH2hOperatorId,
	PAY_OPERATOR_ID as PayOperatorId,
	P_OPERATOR_NAME_1 as POperatorName1,
	P_OPERATOR_NAME_2 as POperatorName2,
	P_OPERATOR_NAME_3 as POperatorName3,
	P_H2H_OPERATOR_ID as PH2hOperatorId,
	SEND_CURRENCY as SendCurrency,
	PAY_CURRENCY as PayCurrency,
	SEND_LOCAL_DATE_TIME as SendLocalDateTime,
	PAY_LOCAL_DATE_TIME as PayLocalDateTime,
	SEND_PRODUCT_CODE as SendProductCode,
	PAY_PRODUCT_CODE as PayProductCode,
	SEND_TEMPLATE as SendTemplate,
	PAY_TEMPLATE as PayTemplate,
	SWB_SEND_FLAG as SwbSendFlag,
	SWB_PAY_FLAG as SwbPayFlag,
	PDT_CONTEXT_HEX_CODES as PdtContextHexCodes,
	SECURITY_QUESTION as SecurityQuestion,
	COUNTER_ADDRESS_LINE1 as CounterAddressLine1,
 COUNTER_ADDRESS_LINE2 as CounterAddressLine2,
 COUNTER_CITY as CounterCity,
 COUNTER_STATE as CounterState,
 COUNTER_ZIP_CODE as CounterZipCode,
 COUNTER_COUNTRY as CounterCountry,
 S_NAME as SName,
 S_NAME_1 as SName1,
 S_NAME_2 as SName2,
 S_NAME_3 as SName3,
 S_NAME_4 as SName4,
 S_ADDRESS_LINE1 as SAddressLine1,
 S_ADDRESS_LINE2 as SAddressLine2,
 S_CITY as SCity,
 S_STATE_PROVINCE as SStateProvince,
 S_ZIP_CODE as SZipCode,
 S_PHONE_NUMBER as SPhoneNumber,
 S_COUNTRY_OF_RESIDENCE as SCountryOfResidence,
 S_PLACE_OF_BIRTH as SPlaceOfBirth,
 S_DATE_OF_BIRTH as SDateOfBirth,
 S_OCCUPATION as SOccupation,
 S_PURPOSE_OF_TRANSACTION as SPurposeOfTransaction,
 S_NATIONALITY as SNationality,
 S_GENDER as SGender,
 S_ID_TYPE as SIdType,
 S_ID_NUMBER as SIdNumber,
 S_ID_ISSUER_COUNTRY as SIdIssuerCountry,
 S_ID_ISSUE_DATE as SIdIssueDate,
 S_ID_EXP_DATE as SIdExpDate,
 S_ID2_TYPE as SId2Type,
 S_ID2_NUMBER as SId2Number,
 S_ID2_ISSUER_COUNTRY as SId2IssuerCountry,
 S_ID2_ISSUE_DATE as SId2IssueDate,
 S_ID2_EXP_DATE as SId2ExpDate,
 S_ID3_TYPE as SId3Type,
 S_ID3_NUMBER as SId3Number,
 S_ID3_ISSUER_COUNTRY as SId3IssuerCountry,
 S_ID3_ISSUE_DATE as SId3IssueDate,
 S_ID3_EXP_DATE as SId3ExpDate,
 S_PARTY_IS_A_RESIDENT as SPartyIsAResident,
 S_SOURCE_OF_FUNDS as SSourceOfFunds,
 S_ADDRESS_VALID_BY_AGT as SAddressValidByAgt,
 S_CUSTOMER_CARD_ID as SCustomerCardId,
 S_COMMERCIAL_PURPOSE as SCommercialPurpose,
 S_RELATION_TO_COUNTER_PARTY as SRelationToCounterParty,
 S_MOBILE_PHONE as SMobilePhone,
 S_CITY_OF_BIRTH as SCityOfBirth,
 S_ISSUING_AUTHORITY as SIssuingAuthority,
 S_ID_HAS_EXP_DATE as SIdHasExpDate,
 S_ACT_ON_OWN_BEHALF as SActOnOwnBehalf,
 S_ACT_ON_OTHERS_BEHALF as SActOnOthersBehalf,
 S_ELECTRONIC_VALIDATION as SElectronicValidation,
 S_IP_ADDRESS as SIpAddress,
 S_EMAIL_ADDRESS as SEmailAddress,
 S_SECOND_PHONE_NUMBER as SSecondPhoneNumber,
 S_PREFERRED_CARD_LEVEL_CODE as SPreferredCardLevelCode,
 S_BANK_ACCOUNT_NUMBER as SBankAccountNumber,
 S_ROUTING_NUMBER as SRoutingNumber,
 S_EMPLOYER as SEmployer,
 S_EU_CITZENSHIP_PROVIDED as SEuCitzenshipProvided,
 S_RESIDENT_PERMIT_PROVIDED as SResidentPermitProvided,
 S_FISCAL_CODE as SFiscalCode,
 S_MARITAL_STATUS as SMaritalStatus,
 S_BANK_NAME as SBankName,
 S_BANK_CITY as SBankCity,
 S_ACCOUNT_HOLDER_NAME as SAccountHolderName,
 S_ADDRESS_KEY as SAddressKey,
 S_CL_ADDRESS_LINE1 as SClAddressLine1,
 S_CL_ADDRESS_LINE2 as SClAddressLine2,
 S_CL_CITY as SClCity,
 S_CL_STATE_CODE as SClStateCode,
 S_CL_STATE_PROVINCE as SClStateProvince,
 S_CL_COUNTRY_CODE as SClCountryCode,
 S_CL_ZIP_CODE as SClZipCode,
 S_CL_PHONE_NUMBER as SClPhoneNumber,
 S_CL_MOBILE_PHONE as SClMobilePhone,
 S_CL_DATE_OF_BIRTH as SClDateOfBirth,
 S_CL_ID1_TYPE as SClId1Type,
 S_CL_ID1_NUMBER as SClId1Number,
 S_CL_ID2_TYPE as SClId2Type,
 S_CL_ID2_NUMBER as SClId2Number,
 S_CL_ID3_TYPE as SClId3Type,
 S_CL_ID3_NUMBER as SClId3Number,
 S_SOUNDEX_LAST_NAME as SSoundexLastName,
 S_GALACTIC_ID as SGalacticId,
 S_GID_MATCH_REASON as SGidMatchReason,
 S_GID_NEW_CONSUMER_INDICATOR as SGidNewConsumerIndicator,
 S_ENHANCED_CI_KEY as SEnhancedCiKey,
 S_ECI_MATCH_REASON as SEciMatchReason,
 S_ECI_NEW_CONSUMER_INDICATOR as SEciNewConsumerIndicator,
 S3_NAME as S3Name,
 S3_NAME_1 as S3Name1,
 S3_NAME_2 as S3Name2,
 S3_NAME_3 as S3Name3,
 S3_ADDRESS_LINE1 as S3AddressLine1,
 S3_CITY as S3City,
 S3_STATE_PROVINCE as S3StateProvince,
 S3_ZIP_CODE as S3ZipCode,
 S3_DATE_OF_BIRTH as S3DateOfBirth,
 S3_COUNTRY_OF_RESIDENCE as S3CountryOfResidence,
 S3_PLACE_OF_BIRTH as S3PlaceOfBirth,
 S3_OCCUPATION as S3Occupation,
 S3_NATIONALITY as S3Nationality,
 S3_ID_TYPE as S3IdType,
 S3_ID_NUMBER as S3IdNumber,
 S3_ID_ISSUER_COUNTRY as S3IdIssuerCountry,
 S3_ID_EXP_DATE as S3IdExpDate,
 S3_ORGANIZATION as S3Organization,
 S3_COUNTRY_OF_BIRTH as S3CountryOfBirth,
 S3_PLACE_OF_ORGANIZATION as S3PlaceOfOrganization,
 S3_REMARKS as S3Remarks,
 S3_TXN_ON_BEHALF_OF_INDIV_ORG as S3TxnOnBehalfOfIndivOrg,
 S3_RELATIONSHIP_TO_MAIN_PARTY as S3RelationshipToMainParty,
 S3_ADDRESS_KEY as S3AddressKey,
 S3_CL_ADDRESS_LINE1 as S3ClAddressLine1,
 S3_CL_DATE_OF_BIRTH as S3ClDateOfBirth,
 S3_CL_ID1_TYPE as S3ClId1Type,
 S3_CL_ID1_NUMBER as S3ClId1Number,
 S3_SOUNDEX_LAST_NAME as S3SoundexLastName,
 S3_GALACTIC_ID as S3GalacticId,
 S3_GID_MATCH_REASON as S3GidMatchReason,
 S3_GID_NEW_CONSUMER_INDICATOR as S3GidNewConsumerIndicator,
 S3_ENHANCED_CI_KEY as S3EnhancedCiKey,
 S3_ECI_MATCH_REASON as S3EciMatchReason,
 S3_ECI_NEW_CONSUMER_INDICATOR as S3EciNewConsumerIndicator,
 P_NAME as PName,
 P_NAME_1 as PName1,
 P_NAME_2 as PName2,
 P_NAME_3 as PName3,
 P_NAME_4 as PName4,
 P_ADDRESS_LINE1 as PAddressLine1,
 P_ADDRESS_LINE2 as PAddressLine2,
 P_CITY as PCity,
 P_STATE_PROVINCE as PStateProvince,
 P_ZIP_CODE as PZipCode,
 P_PHONE_NUMBER as PPhoneNumber,
 P_COUNTRY_OF_RESIDENCE as PCountryOfResidence,
 P_PLACE_OF_BIRTH as PPlaceOfBirth,
 P_DATE_OF_BIRTH as PDateOfBirth,
 P_OCCUPATION as POccupation,
 P_PURPOSE_OF_TRANSACTION as PPurposeOfTransaction,
 P_NATIONALITY as PNationality,
 P_GENDER as PGender,
 P_ID_TYPE as PIdType,
 P_ID_NUMBER as PIdNumber,
 P_ID_ISSUER_COUNTRY as PIdIssuerCountry,
 P_ID_ISSUE_DATE as PIdIssueDate,
 P_ID_EXP_DATE as PIdExpDate,
 P_ID2_TYPE as PId2Type,
 P_ID2_NUMBER as PId2Number,
 P_ID2_ISSUER_COUNTRY as PId2IssuerCountry,
 P_ID2_ISSUE_DATE as PId2IssueDate,
 P_ID2_EXP_DATE as PId2ExpDate,
 P_ID3_TYPE as PId3Type,
 P_ID3_NUMBER as PId3Number,
 P_ID3_ISSUER_COUNTRY as PId3IssuerCountry,
 P_ID3_ISSUE_DATE as PId3IssueDate,
 P_ID3_EXP_DATE as PId3ExpDate,
 P_PARTY_IS_A_RESIDENT as PPartyIsAResident,
 P_SOURCE_OF_FUNDS as PSourceOfFunds,
 P_ADDRESS_VALID_BY_AGT as PAddressValidByAgt,
 P_CUSTOMER_CARD_ID as PCustomerCardId,
 P_COMMERCIAL_PURPOSE as PCommercialPurpose,
 P_RELATION_TO_COUNTER_PARTY as PRelationToCounterParty,
 P_MOBILE_PHONE as PMobilePhone,
 P_CITY_OF_BIRTH as PCityOfBirth,
 P_ISSUING_AUTHORITY as PIssuingAuthority,
 P_ID_HAS_EXP_DATE as PIdHasExpDate,
 P_ACT_ON_OWN_BEHALF as PActOnOwnBehalf,
 P_ACT_ON_OTHERS_BEHALF as PActOnOthersBehalf,
 P_EMAIL_ADDRESS as PEmailAddress,
 P_PREFERRED_CARD_LEVEL_CODE as PPreferredCardLevelCode,
 P_BANK_ACCOUNT_NUMBER as PBankAccountNumber,
 P_ROUTING_NUMBER as PRoutingNumber,
 P_EMPLOYER as PEmployer,
 P_EU_CITZENSHIP_PROVIDED as PEuCitzenshipProvided,
 P_RESIDENT_PERMIT_PROVIDED as PResidentPermitProvided,
 P_FISCAL_CODE as PFiscalCode,
 P_MARITAL_STATUS as PMaritalStatus,
 P_BANK_NAME as PBankName,
 P_BANK_CITY as PBankCity,
 P_ACCOUNT_HOLDER_NAME as PAccountHolderName,
 P_ADDRESS_KEY as PAddressKey,
 P_CL_ADDRESS_LINE1 as PClAddressLine1,
 P_CL_ADDRESS_LINE2 as PClAddressLine2,
 P_CL_CITY as PClCity,
 P_CL_STATE_CODE as PClStateCode,
 P_CL_STATE_PROVINCE as PClStateProvince,
 P_CL_COUNTRY_CODE as PClCountryCode,
 P_CL_ZIP_CODE as PClZipCode,
 P_CL_PHONE_NUMBER as PClPhoneNumber,
 P_CL_MOBILE_PHONE as PClMobilePhone,
 P_CL_DATE_OF_BIRTH as PClDateOfBirth,
 P_CL_ID1_TYPE as PClId1Type,
 P_CL_ID1_NUMBER as PClId1Number,
 P_CL_ID2_TYPE as PClId2Type,
 P_CL_ID2_NUMBER as PClId2Number,
 P_CL_ID3_TYPE as PClId3Type,
 P_CL_ID3_NUMBER as PClId3Number,
 P_SOUNDEX_LAST_NAME as PSoundexLastName,
 P_GALACTIC_ID as PGalacticId,
 P_GID_MATCH_REASON as PGidMatchReason,
 P_GID_NEW_CONSUMER_INDICATOR as PGidNewConsumerIndicator,
 P_ENHANCED_CI_KEY as PEnhancedCiKey,
 P_ECI_MATCH_REASON as PEciMatchReason,
 P_ECI_NEW_CONSUMER_INDICATOR as PEciNewConsumerIndicator,
 P3_NAME as P3Name,
 P3_NAME_1 as P3Name1,
 P3_NAME_2 as P3Name2,
 P3_NAME_3 as P3Name3,
 P3_ADDRESS_LINE1 as P3AddressLine1,
 P3_CITY as P3City,
 P3_STATE_PROVINCE as P3StateProvince,
 P3_ZIP_CODE as P3ZipCode,
 P3_DATE_OF_BIRTH as P3DateOfBirth,
 P3_COUNTRY_OF_RESIDENCE as P3CountryOfResidence,
 P3_PLACE_OF_BIRTH as P3PlaceOfBirth,
 P3_OCCUPATION as P3Occupation,
 P3_NATIONALITY as P3Nationality,
 P3_ID_TYPE as P3IdType,
 P3_ID_NUMBER as P3IdNumber,
 P3_ID_ISSUER_COUNTRY as P3IdIssuerCountry,
 P3_ID_EXP_DATE as P3IdExpDate,
 P3_ORGANIZATION as P3Organization,
 P3_COUNTRY_OF_BIRTH as P3CountryOfBirth,
 P3_PLACE_OF_ORGANIZATION as P3PlaceOfOrganization,
 P3_REMARKS as P3Remarks,
 P3_TXN_ON_BEHALF_OF_INDIV_ORG as P3TxnOnBehalfOfIndivOrg,
 P3_RELATIONSHIP_TO_MAIN_PARTY as P3RelationshipToMainParty,
 P3_ADDRESS_KEY as P3AddressKey,
 P3_CL_ADDRESS_LINE1 as P3ClAddressLine1,
 P3_CL_DATE_OF_BIRTH as P3ClDateOfBirth,
 P3_CL_ID1_TYPE as P3ClId1Type,
 P3_CL_ID1_NUMBER as P3ClId1Number,
 P3_SOUNDEX_LAST_NAME as P3SoundexLastName,
 P3_GALACTIC_ID as P3GalacticId,
 P3_GID_MATCH_REASON as P3GidMatchReason,
 P3_GID_NEW_CONSUMER_INDICATOR as P3GidNewConsumerIndicator,
 P3_ENHANCED_CI_KEY as P3EnhancedCiKey,
 P3_ECI_MATCH_REASON as P3EciMatchReason,
 P3_ECI_NEW_CONSUMER_INDICATOR as P3EciNewConsumerIndicator,
 RR as Rr,
 FIU as Fiu,
 CS as Cs,
 FRAUD as Fraud,
 INTERDICTED as Interdicted,
 KYC as Kyc,
 SUBPOENA as Subpoena,
 AGENT_REVIEW as AgentReview,
 RERESOLVE_FLAG as ReresolveFlag,
 APPROVED_FAILED as ApprovedFailed,
 RECORDING_DATE as RecordingDate,
 RECORDING_TIME as RecordingTime,
 MTCN as Mtcn,
 EVENT_ID as EventId,
 S_ATTEMPT_ID as SAttemptId,
 S_ATTEMPT_INSERT_TIMESTAMP as SAttemptInsertTimestamp,
 S_ATTEMPT_TIMESTAMP as SAttemptTimestamp,
 S_EVENT_TYPE as SEventType,
 P_ATTEMPT_ID as PAttemptId,
 P_ATTEMPT_INSERT_TIMESTAMP as PAttemptInsertTimestamp,
 P_ATTEMPT_TIMESTAMP as PAttemptTimestamp,
 P_EVENT_TYPE as PEventType,
 REFUND_FLAG as RefundFlag,
 S_ATTEMPT_REASON as SAttemptReason,
 P_ATTEMPT_REASON as PAttemptReason,
 ASSOCIATED_MTCN as AssociatedMtcn,
 ASSOCIATED_SEND_DATE as AssociatedSendDate,
 GROUP_MTCN as GroupMtcn,
 GROUP_SEND_DATE as GroupSendDate,
 S_ATTEMPT_STATUS as SAttemptStatus,
 P_ATTEMPT_STATUS as PAttemptStatus,
 S_TRANS_TYPE_ID as STransTypeId,
 P_TRANS_TYPE_ID as PTransTypeId,
 DEMOTED_BATCH_ID as DemotedBatchId,
 DEMOTED_TIMESTAMP as DemotedTimestamp,
 PAY_BRAND as PayBrand,
 INTENDED_STATE as IntendedState,
 INTENDED_P_NAME as IntendedPName,
 INTENDED_P_NAME_1 as IntendedPName1,
 INTENDED_P_NAME_2 as IntendedPName2,
 INTENDED_P_NAME_3 as IntendedPName3,
 INTENDED_P_NAME_4 as IntendedPName4,
 INTENDED_P_ADDRESS_LINE1 as IntendedPAddressLine1,
 INTENDED_P_ADDRESS_LINE2 as IntendedPAddressLine2,
 INTENDED_P_CITY as IntendedPCity,
 INTENDED_P_STATE_PROVINCE as IntendedPStateProvince,
 INTENDED_P_ZIP_CODE as IntendedPZipCode,
 INTENDED_P_COUNTRY_OF_RES as IntendedPCountryOfRes,
 INTENDED_P_MOBILE_PHONE as IntendedPMobilePhone,
 INTENDED_P_EMAIL_ADDRESS as IntendedPEmailAddress,
 INTENDED_P_ROUTING_NUMBER as IntendedPRoutingNumber,
 INTENDED_P_BANK_ACCT_NUM as IntendedPBankAcctNum,
 INTENDED_P_BANK_NAME as IntendedPBankName,
 INTENDED_P_BANK_CITY as IntendedPBankCity,
 S_NAME_WITH_SLASH as SNameWithSlash,
 P_NAME_WITH_SLASH as PNameWithSlash,
 INTENDED_P_NAME_WITH_SLASH as IntendedPNameWithSlash,
 PRODUCT as Product,
 RECORDING_CHANNEL as RecordingChannel,
 PAY_IN as PayIn,
 SPEED_OF_DELIVERY as SpeedOfDelivery,
 SEND_CONSUMER_INFO as SendConsumerInfo,
 SEND_DEVICE as SendDevice,
 WU_INTERFACE as WuInterface,
 INTENDED_PAY_CHANNEL as IntendedPayChannel,
 INTENDED_PAY_OUT as IntendedPayOut,
 PAY_CONSUMER_INFO as PayConsumerInfo,
 PAY_DEVICE as PayDevice,
 PAY_CHANNEL as PayChannel,
 PAY_OUT as PayOut,
 S_PCP_NUMBER as SPcpNumber,
 P_PCP_NUMBER as PPcpNumber,
 S_SHA1 as SSha1,
 P_SHA1 as PSha1,
 S_COMMENTS as SComments,
 S_CUST_TYPE as SCustType,
 S_PERM_ADDR as SPermAddr,
 S_PERM_ADDR2 as SPermAddr2,
 S_PERM_CITY as SPermCity,
 S_PERM_STATE as SPermState,
 S_PERM_ZIP as SPermZip,
 S_PERM_COUNTRY as SPermCountry,
 S_NATURE_OF_WORK as SNatureOfWork,
 S_ADDR_VERIF_DOC_TYPE as SAddrVerifDocType,
 S_ACK as SAck,
 S_ADDR_VERIF_DOC_I_DATE as SAddrVerifDocIDate,
 S_DISTRICT_FIELD as SDistrictField,
 S_BENF_CD as SBenfCd,
 S_CITIZEN_TYPE as SCitizenType,
 S_NON_GREGORIAN_DOB as SNonGregorianDob,
 S_NON_GREGORIAN_ID_E_DATE1 as SNonGregorianIdEDate1,
 S_ADDR_VERIF_DOC_I as SAddrVerifDocI,
 S_SOB as SSob,
 S_INTD_ID_TYPE as SIntdIdType,
 S_INTD_ID_NUMBER as SIntdIdNumber,
 S_INTD_ID_ISSUER as SIntdIdIssuer,
 S_ID_ADDR_DIFF as SIdAddrDiff,
 S3_JOB as S3Job,
 S3_GENDER as S3Gender,
 S3_PHONE as S3Phone,
 S3_TAX_ID as S3TaxId,
 S3_BUSPHONE as S3Busphone,
 S3_PEP_RELATED as S3PepRelated,
 S_INCOME as SIncome,
 S_OFFICIAL_COR as SOfficialCor,
 S_EMP_STATUS as SEmpStatus,
 S_PRI_ID_IMG_STATUS as SPriIdImgStatus,
 S_PRI_ID_IMG_REF_NBR as SPriIdImgRefNbr,
 S_CMPL_VAL_FLG as SCmplValFlg,
 S_TEMP_ADDR as STempAddr,
 S_TEMP_ADDR2 as STempAddr2,
 S_TEMP_CITY as STempCity,
 S_TEMP_STATE as STempState,
 S_TEMP_ZIP as STempZip,
 S_TEMP_COUNTRY as STempCountry,
 S_ID_HAS_ISSUE_DATE as SIdHasIssueDate,
 S_CUST_REL_FLAG as SCustRelFlag,
 S_ID_I_AUTHORITY_2 as SIdIAuthority2,
 S_SOURCE_OF_FUNDS_DOCUMENT as SSourceOfFundsDocument,
 S3_ADDR_2 as S3Addr2,
 S3_EMPLOYMENT_INDUSTRY as S3EmploymentIndustry,
 S_ID_I_AUTHORITY_1 as SIdIAuthority1,
 S_BIOMETRIC_TXN_REF_NO as SBiometricTxnRefNo,
 S_BIOMETRIC_ACK_STATUS as SBiometricAckStatus,
 S_STATE_OF_ISSUE_2 as SStateOfIssue2,
 S3_COUNTRY_PHONE_CODE as S3CountryPhoneCode,
 S3_EMAIL as S3Email,
 S3_COUNTRY_MOBILE_CODE as S3CountryMobileCode,
 S3_MOBILE as S3Mobile,
 S3_ID_I_AUTHORITY as S3IdIAuthority,
 S3_STATE_OF_ISSUE as S3StateOfIssue,
 S3_ID_ISSUE_DATE as S3IdIssueDate,
 S3_SOB as S3Sob,
 S_ID_I_AUTHORITY_3 as SIdIAuthority3,
 S_STATE_OF_ISSUE_3 as SStateOfIssue3,
 S_ADDR_VERIFI_DOC_NO as SAddrVerifiDocNo,
 S_ADDR_SAME_AS_PERM_ADDR as SAddrSameAsPermAddr,
 S_BRANCH_CODE as SBranchCode,
 S_BRANCH_CITY as SBranchCity,
 S_BANK_CODE as SBankCode,
 S_SORT_CODE as SSortCode,
 S_ACCT_PREFIX as SAcctPrefix,
 S_ACCT_SUFFIX as SAcctSuffix,
 S_ACCT_TYPE as SAcctType,
 S_IMG_FLA_SIG_REF_NBR as SImgFlaSigRefNbr,
 S_IMG_CUST_CONST_SIG_REF_NBR as SImgCustConstSigRefNbr,
 S_IMG_CUST_SIG_REF_NBR as SImgCustSigRefNbr,
 S_IMG_ID2 as SImgId2,
 S_IMG_PERM_POA as SImgPermPoa,
 S_IMG_TEMP_POA as SImgTempPoa,
 S_IMG_EMP_STATUS as SImgEmpStatus,
 S_IMG_PURP as SImgPurp,
 S_IMG_SOURCE as SImgSource,
 S_IMG_REL as SImgRel,
 S_MULTI_ERROR_FLAG as SMultiErrorFlag,
 P_COMMENTS as PComments,
 P_CUST_TYPE as PCustType,
 P_PERM_ADDR as PPermAddr,
 P_PERM_ADDR2 as PPermAddr2,
 P_PERM_CITY as PPermCity,
 P_PERM_STATE as PPermState,
 P_PERM_ZIP as PPermZip,
 P_PERM_COUNTRY as PPermCountry,
 P_NATURE_OF_WORK as PNatureOfWork,
 P_ADDR_VERIF_DOC_TYPE as PAddrVerifDocType,
 P_ACK as PAck,
 P_ADDR_VERIF_DOC_I_DATE as PAddrVerifDocIDate,
 P_DISTRICT_FIELD as PDistrictField,
 P_BENF_CD as PBenfCd,
 P_ELECTRONIC_VAL as PElectronicVal,
 P_CITIZEN_TYPE as PCitizenType,
 P_NON_GREGORIAN_DOB as PNonGregorianDob,
 P_NON_GREGORIAN_ID_E_DATE1 as PNonGregorianIdEDate1,
 P_ADDR_VERIF_DOC_I as PAddrVerifDocI,
 P_SOB as PSob,
 P_INTD_ID_TYPE as PIntdIdType,
 P_INTD_ID_NUMBER as PIntdIdNumber,
 P_INTD_ID_ISSUER as PIntdIdIssuer,
 P_ID_ADDR_DIFF as PIdAddrDiff,
 P3_JOB as P3Job,
 P3_GENDER as P3Gender,
 P3_PHONE as P3Phone,
 P3_TAX_ID as P3TaxId,
 P3_BUSPHONE as P3Busphone,
 P3_PEP_RELATED as P3PepRelated,
 P_INCOME as PIncome,
 P_OFFICIAL_COR as POfficialCor,
 P_EMP_STATUS as PEmpStatus,
 P_PRI_ID_IMG_STATUS as PPriIdImgStatus,
 P_PRI_ID_IMG_REF_NBR as PPriIdImgRefNbr,
 P_CMPL_VAL_FLG as PCmplValFlg,
 P_TEMP_ADDR as PTempAddr,
 P_TEMP_ADDR2 as PTempAddr2,
 P_TEMP_CITY as PTempCity,
 P_TEMP_STATE as PTempState,
 P_TEMP_ZIP as PTempZip,
 P_TEMP_COUNTRY as PTempCountry,
 P_ID_HAS_ISSUE_DATE as PIdHasIssueDate,
 P_ID_I_AUTHORITY_2 as PIdIAuthority2,
 P_SOURCE_OF_FUNDS_DOCUMENT as PSourceOfFundsDocument,
 P3_ADDR_2 as P3Addr2,
 P3_EMPLOYMENT_INDUSTRY as P3EmploymentIndustry,
 P_ID_I_AUTHORITY_1 as PIdIAuthority1,
 P_BIOMETRIC_TXN_REF_NO as PBiometricTxnRefNo,
 P_BIOMETRIC_ACK_STATUS as PBiometricAckStatus,
 P_STATE_OF_ISSUE_2 as PStateOfIssue2,
 P3_COUNTRY_PHONE_CODE as P3CountryPhoneCode,
 P3_EMAIL as P3Email,
 P3_COUNTRY_MOBILE_CODE as P3CountryMobileCode,
 P3_MOBILE as P3Mobile,
 P3_ID_I_AUTHORITY as P3IdIAuthority,
 P3_STATE_OF_ISSUE as P3StateOfIssue,
 P3_ID_ISSUE_DATE as P3IdIssueDate,
 P3_SOB as P3Sob,
 P_ID_I_AUTHORITY_3 as PIdIAuthority3,
 P_STATE_OF_ISSUE_3 as PStateOfIssue3,
 P_ADDR_VERIFI_DOC_NO as PAddrVerifiDocNo,
 P_ADDR_SAME_AS_PERM_ADDR as PAddrSameAsPermAddr,
 P_BRANCH_CODE as PBranchCode,
 P_BRANCH_CITY as PBranchCity,
 P_BANK_CODE as PBankCode,
 P_SORT_CODE as PSortCode,
 P_ACCT_PREFIX as PAcctPrefix,
 P_ACCT_SUFFIX as PAcctSuffix,
 P_ACCT_TYPE as PAcctType,
 P_IMG_FLA_SIG_REF_NBR as PImgFlaSigRefNbr,
 P_IMG_CUST_CONST_SIG_REF_NBR as PImgCustConstSigRefNbr,
 P_IMG_CUST_SIG_REF_NBR as PImgCustSigRefNbr,
 P_IMG_ID2 as PImgId2,
 P_IMG_PERM_POA as PImgPermPoa,
 P_IMG_TEMP_POA as PImgTempPoa,
 P_IMG_EMP_STATUS as PImgEmpStatus,
 P_IMG_PURP as PImgPurp,
 P_IMG_SOURCE as PImgSource,
 P_IMG_REL as PImgRel,
 P_MULTI_ERROR_FLAG as PMultiErrorFlag
FROM CPCE.TRANSACTION
WHERE   SEND_DATE > @pSendDate FETCH FIRST {rowsToFetch} ROWS ONLY";
		#endregion SQL statement
		return ctx.Database.SqlQuery<iWatch.Transaction>(sqlStmt, new DB2Parameter("@pSendDate", dtFrom)).ToList();
	}
}